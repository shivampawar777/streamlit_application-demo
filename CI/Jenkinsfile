pipeline {
    agent any
        //docker { image 'shivam139/jenkins-agent-ubuntu:v2' args '--user root -v /var/run/docker.sock:/var/run/docker.sock' }

    environment {
        IMAGE_TAG = "v${env.BUILD_NUMBER}"
    }

    stages {
        stage('checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/shivampawar777/streamlit_application-demo.git' 
                sh 'echo passed...'
            }
        }
        stage('Build & push docker image') {
            steps {
                echo 'Building the docker image And then pushing image to the dockerHub'
                withCredentials([
                    usernamePassword(credentialsId: "dockerhub",
                    usernameVariable: "DOCKER_USER",
                    passwordVariable: "DOCKER_PASS"
                    )]) {
                    sh """
                        cd CI/Python-app/
                        docker build -t ${DOCKER_USER}/streamlit_application:${env.IMAGE_TAG} .
                        docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
                        docker push ${DOCKER_USER}/streamlit_application:${env.IMAGE_TAG}
                    """
                }
            }
        }
        stage('Update deployment manifest') {
            steps {
                withCredentials([
                    string(credentialsId: "gitHubEmail", variable: "GITHUB_EMAIL"),
                    string(credentialsId: "gitHubUsername", variable: "GITHUB_USER"),
                    string(credentialsId: "gitHubRepo", variable: "GITHUB_REPO"),
                    string(credentialsId: "gitHub", variable: "GITHUB_TOKEN"),
                    usernamePassword(credentialsId: "dockerhub",
                                    usernameVariable: "DOCKER_USER",
                                    passwordVariable: "DOCKER_PASS")]) {
                                        sh """
                                            git config user.email "${GITHUB_EMAIL}"
                                            git config user.name "${GITHUB_USER}"
                                            
                                            # update the deployment file: replace image tag
                                            sed -i "s|${DOCKER_USER}/streamlit_application:.*|${DOCKER_USER}/streamlit_application:${env.IMAGE_TAG}|g" \
                                                CD/Deployment-Manifest/deployment.yml
                                            
                                            git add Deployment-Manifest/deployment.yml
                                            git commit -m "Updated deployment image to version ${env.IMAGE_TAG}"
                                            git push https://${GITHUB_TOKEN}@github.com/${GITHUB_USER}/${GITHUB_REPO} HEAD:master
                                        """
                }
            }
        }
    }
}
